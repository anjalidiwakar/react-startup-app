[{"/Users/anjalidiwakar/Documents/react-startup-app/src/index.js":"1","/Users/anjalidiwakar/Documents/react-startup-app/src/reportWebVitals.js":"2","/Users/anjalidiwakar/Documents/react-startup-app/src/components/home/home.jsx":"3","/Users/anjalidiwakar/Documents/react-startup-app/src/components/admin/admin.jsx":"4","/Users/anjalidiwakar/Documents/react-startup-app/src/components/SignUp/signup.jsx":"5","/Users/anjalidiwakar/Documents/react-startup-app/src/components/App.jsx":"6","/Users/anjalidiwakar/Documents/react-startup-app/src/components/user/User.jsx":"7","/Users/anjalidiwakar/Documents/react-startup-app/src/components/header/Header.jsx":"8","/Users/anjalidiwakar/Documents/react-startup-app/src/components/admin/Admin.jsx":"9","/Users/anjalidiwakar/Documents/react-startup-app/src/components/SignUp/Signup.jsx":"10","/Users/anjalidiwakar/Documents/react-startup-app/src/components/signIn/SignIn.jsx":"11","/Users/anjalidiwakar/Documents/react-startup-app/src/components/signIn/SignInHere.jsx":"12","/Users/anjalidiwakar/Documents/react-startup-app/src/components/models/User.jsx":"13","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/store.js":"14","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signIn/signInReducer.js":"15","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signIn/signInAction.js":"16","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/actionTypes.js":"17","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signUp/signUpAction.js":"18","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/rootReducer.js":"19","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signUp/signUpReducer.js":"20","/Users/anjalidiwakar/Documents/react-startup-app/src/components/models/Poll.js":"21","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/active-Poll/activePolls.jsx":"22","/Users/anjalidiwakar/Documents/react-startup-app/src/components/buttons/primaryButton.jsx":"23","/Users/anjalidiwakar/Documents/react-startup-app/src/components/buttons/PrimaryButton.jsx":"24","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/pollOption/AddPollOptionReducer.js":"25","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/pollOption/AddPollOptionAction.js":"26","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/adminView_Poll/AdminViewPolls.jsx":"27","/Users/anjalidiwakar/Documents/react-startup-app/src/components/buttons/LightButton.jsx":"28","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/closed-Polls/ClosedPolls.jsx":"29","/Users/anjalidiwakar/Documents/react-startup-app/src/components/header/HeaderRightPanel.jsx":"30","/Users/anjalidiwakar/Documents/react-startup-app/src/components/header/GuestUser.jsx":"31","/Users/anjalidiwakar/Documents/react-startup-app/src/components/header/LoggedInUser.jsx":"32","/Users/anjalidiwakar/Documents/react-startup-app/src/components/feedback/SuccessNotofication.jsx":"33","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/add-Poll/PollForm.jsx":"34","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/add-Poll/AddPollContainer.jsx":"35","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/active-Poll/ActivePolls.jsx":"36","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/PollOptions.jsx":"37","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/PollStatus.jsx":"38","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/PollInputUser.jsx":"39","/Users/anjalidiwakar/Documents/react-startup-app/src/components/models/PollQuestionsList.js":"40","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/polls/AddPollAction.js":"41","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/polls/UpdatePollAction.js":"42","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/polls/AddUpdatePollsReducer.js":"43","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signOut/userLoggedInReducer.js":"44","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signOut/userLoggedAction.js":"45"},{"size":574,"mtime":1610371870051,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1609069364800,"results":"48","hashOfConfig":"47"},{"size":1163,"mtime":1611161598439,"results":"49","hashOfConfig":"47"},{"size":1257,"mtime":1609238776200,"results":"50","hashOfConfig":"47"},{"size":4325,"mtime":1609222841681,"results":"51","hashOfConfig":"47"},{"size":681,"mtime":1611158664371,"results":"52","hashOfConfig":"47"},{"size":2402,"mtime":1611213152101,"results":"53","hashOfConfig":"47"},{"size":6135,"mtime":1611297236175,"results":"54","hashOfConfig":"47"},{"size":2797,"mtime":1611317765756,"results":"55","hashOfConfig":"47"},{"size":7284,"mtime":1610638269692,"results":"56","hashOfConfig":"47"},{"size":3559,"mtime":1611167943581,"results":"57","hashOfConfig":"47"},{"size":1813,"mtime":1609245984385,"results":"58","hashOfConfig":"47"},{"size":803,"mtime":1610297405841,"results":"59","hashOfConfig":"47"},{"size":223,"mtime":1609858157715,"results":"60","hashOfConfig":"47"},{"size":392,"mtime":1609858123998,"results":"61","hashOfConfig":"47"},{"size":165,"mtime":1609858120141,"results":"62","hashOfConfig":"47"},{"size":275,"mtime":1611160544558,"results":"63","hashOfConfig":"47"},{"size":165,"mtime":1609858127828,"results":"64","hashOfConfig":"47"},{"size":555,"mtime":1611161451634,"results":"65","hashOfConfig":"47"},{"size":390,"mtime":1609858157715,"results":"66","hashOfConfig":"47"},{"size":997,"mtime":1610964592393,"results":"67","hashOfConfig":"47"},{"size":1720,"mtime":1610638039564,"results":"68","hashOfConfig":"47"},{"size":188,"mtime":1610002745958,"results":"69","hashOfConfig":"47"},{"size":243,"mtime":1611575640598,"results":"70","hashOfConfig":"47"},{"size":655,"mtime":1610983969956,"results":"71","hashOfConfig":"47"},{"size":157,"mtime":1610968595646,"results":"72","hashOfConfig":"47"},{"size":1535,"mtime":1611082742219,"results":"73","hashOfConfig":"47"},{"size":184,"mtime":1610088590132,"results":"74","hashOfConfig":"47"},{"size":1302,"mtime":1611082784426,"results":"75","hashOfConfig":"47"},{"size":881,"mtime":1610371551803,"results":"76","hashOfConfig":"47"},{"size":496,"mtime":1610371551518,"results":"77","hashOfConfig":"47"},{"size":756,"mtime":1610371551882,"results":"78","hashOfConfig":"47"},{"size":240,"mtime":1610469659487,"results":"79","hashOfConfig":"47"},{"size":3904,"mtime":1611082702475,"results":"80","hashOfConfig":"47"},{"size":3619,"mtime":1611082409174,"results":"81","hashOfConfig":"47"},{"size":3454,"mtime":1611213193854,"results":"82","hashOfConfig":"47"},{"size":903,"mtime":1611082872094,"results":"83","hashOfConfig":"47"},{"size":1429,"mtime":1611082891825,"results":"84","hashOfConfig":"47"},{"size":2136,"mtime":1611213176914,"results":"85","hashOfConfig":"47"},{"size":386,"mtime":1610910730704,"results":"86","hashOfConfig":"47"},{"size":148,"mtime":1610987845174,"results":"87","hashOfConfig":"47"},{"size":157,"mtime":1610987767965,"results":"88","hashOfConfig":"47"},{"size":1417,"mtime":1611083141104,"results":"89","hashOfConfig":"47"},{"size":509,"mtime":1611160774676,"results":"90","hashOfConfig":"47"},{"size":161,"mtime":1611161710168,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1x83du4",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"94"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"94"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/anjalidiwakar/Documents/react-startup-app/src/index.js",[],["206","207"],"/Users/anjalidiwakar/Documents/react-startup-app/src/reportWebVitals.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/home/home.jsx",["208","209","210","211"],"import React from 'react';\nimport '../Common.css';\nimport SignIn from '../signIn/SignIn';\nimport SignUp from '../SignUp/Signup';\nimport  User  from \"../user/User\";\nimport Admin from '../admin/Admin';\nimport { useSelector } from 'react-redux'\n\nexport default function HomePage(props) {\n  const isLoggedIn = useSelector((state) => state.checkLogin.state_User_Logged_In);\n  let role = sessionStorage.getItem(\"role\");\n  let signinToken = useSelector((state) => state.signIn.state_SignInForm)\n  let signupToken = useSelector((state) => state.signUp.state_SignUpForm)\n  if (signinToken) {\n    return (\n      <div className=\"wrapper\">\n        Welcome to Home Page\n        <SignIn />\n      </div>\n    );\n  }\n  else if (signupToken) {\n    return (\n      <div className=\"wrapper\">\n        Welcome to Home Page\n       <SignUp />\n      </div>\n    );\n  }\n  // else if (isLoggedIn) {\n  //   return (\n  //     <div className=\"wrapper\">\n  //        { role===\"User\" && <User /> }\n  //        { role===\"Admin\" && <Admin /> }\n  //     </div>\n  //   );\n  // }\n  else {\n    return (\n      <div className=\"wrapper\">\n        Welcome to Home Page {signupToken}\n      </div>\n    );\n  }\n}\n","/Users/anjalidiwakar/Documents/react-startup-app/src/components/admin/admin.jsx",["212","213"],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/SignUp/signup.jsx",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/App.jsx",["214"],"import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport User from './user/User';\nimport Header from './header/Header';\nimport Admin from './admin/Admin';\nimport HomePage from './home/home';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\n\nexport default function App() {\n    return (\n        <Provider store={store}>\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route path=\"/admin\" component={Admin} />\n                    <Route path=\"/user\" component={User} />\n                </Switch>\n        </Provider>\n    );\n}","/Users/anjalidiwakar/Documents/react-startup-app/src/components/user/User.jsx",["215","216","217","218"],"import React, { useState } from 'react';\nimport { connect, useSelector }from 'react-redux';\nimport SignIn from '../signIn/SignIn';\nimport PrimaryButton from '../buttons/PrimaryButton';\nimport ActivePolls from '../polls/active-Poll/ActivePolls'\nimport ClosedPolls from '../polls/closed-Polls/ClosedPolls'\nimport { Tabs, Menu } from 'antd';\nimport './User.css'\nimport \"antd/dist/antd.css\";\nimport '../Common.css';\n\nconst { SubMenu } = Menu;\n\n class User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userRequest : \"Sign In\",\n      compToRender : null,\n      role : sessionStorage.getItem(\"role\")\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n   handleClick(clickHandler) {\n    switch (clickHandler.key) {\n      case \"1\":\n        this.setState({ compToRender:<ActivePolls /> });\n        console.log(this.state.compToRender)\n        break;\n      case \"2\":\n        this.setState({compToRender:<ClosedPolls />})\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    if(this.props.ifLoggedIn.state_User_Logged_In!==true || this.state.role!==\"User\") { \n    return (\n      <>    \n        <SignIn />\n      </>\n    ) \n  }\n\n    else {\n      return (\n        <>\n          <div className=\"container\">\n            <div className=\"left\">\n              <Menu\n                onClick={this.handleClick}\n                style={{ width: 256 }}\n                defaultSelectedKeys={['1']}\n                defaultOpenKeys={['pollMenu']}\n                mode=\"inline\">\n                <SubMenu key=\"employeeMenu\" title=\"My Profile\">\n                  <Menu.Item key=\"3\">Personal Details</Menu.Item>\n                  <Menu.Item key=\"4\">Team</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"pollMenu\" title=\"Polls\">\n                  <SubMenu title=\"Check Status\">\n                    <Menu.Item key=\"1\">Active Polls</Menu.Item>\n                    <Menu.Item key=\"2\">Closed Polls</Menu.Item>\n                  </SubMenu>\n                </SubMenu>\n              </Menu>\n            </div>\n  \n            {this.props.ifLoggedIn.state_User_Logged_In === true && <div className=\"right\">{this.state.compToRender}</div>}\n  \n          </div>\n        </>\n      );\n  }\n  } \n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ifLoggedIn : state.checkLogin,\n    \n  }\n}\n\nexport default connect(mapStateToProps, undefined)(User);\n\n","/Users/anjalidiwakar/Documents/react-startup-app/src/components/header/Header.jsx",["219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"import React from 'react';\nimport { connect, useSelector } from 'react-redux'\nimport PrimaryButton from '../buttons/PrimaryButton'\nimport '../Common.css';\nimport './Header.css';\nimport { showSignInForm } from '../../redux/signIn/signInAction'\nimport { showSignUpForm } from '../../redux/signUp/signUpAction'\nimport { userSignedIn } from '../../redux/signOut/userLoggedAction'\n\nfunction Header(props) {\n    let users = localStorage.getItem(\"users\");\n    if (users) {\n        users = JSON.parse(users);\n    }\n    const isLoggedIn = useSelector((state) => state.checkLogin.state_User_Logged_In);                    \n    let user = sessionStorage.getItem(\"email\");\n    function signOutUser() {\n        sessionStorage.removeItem(\"email\");\n        props.userLoggedIn(false);\n    }\n    function signUpHandle() {\n        props.showSignIn(false);\n        props.showSignUp(true);\n    }\n    function signInHandle() {\n        props.showSignUp(false);\n        props.showSignIn(true);\n    }\n   \n    if (isLoggedIn === true) {\n        user = users.find(u => u.email === sessionStorage.getItem(\"email\"));\n        return (\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div className=\"navbar-brand\">\n                    <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </a>\n                </div>\n\n                <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                    <div className=\"navbar-start\">\n                        <a className=\"navbar-item\">\n                            Home\n                       </a>\n                        <div className=\"navbar-item has-dropdown is-hoverable\">\n                            <a className=\"navbar-link\">\n                                More\n                            </a>\n                            <div className=\"navbar-dropdown\">\n                                <a className=\"navbar-item\">\n                                    About\n                                </a>\n                                <a className=\"navbar-item\">\n                                    Contact\n                                </a>\n                                <hr className=\"navbar-divider\" />\n                                <a className=\"navbar-item\">\n                                    Report an issue\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"navbar-end\">\n                        <div className=\"navbar-item\">\n                            Welcome {user.firstName}\n                            <div className=\"navbar-item has-dropdown is-hoverable\">\n                                <a className=\"navbar-link\">\n\n                                </a>\n                                <div className=\"navbar-dropdown\">\n                                    <a onClick={signOutUser} className=\"navbar-item\">\n                                        Sign out\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n    else {\n\n        return (\n            <>\n                <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                    <div className=\"navbar-brand\">\n                        <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                        </a>\n                    </div>\n\n                    <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                        <div className=\"navbar-start\">\n                            <a className=\"navbar-item\">\n                                Home\n                             </a>\n                            <div className=\"navbar-item has-dropdown is-hoverable\">\n                                <a className=\"navbar-link\">\n                                    More\n                                </a>\n                                <div className=\"navbar-dropdown\">\n                                    <a className=\"navbar-item\">\n                                        About\n                                    </a>\n                                    <a className=\"navbar-item\">\n                                        Contact\n                                    </a>\n                                    <hr className=\"navbar-divider\" />\n                                    <a className=\"navbar-item\">\n                                        Report an issue\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"navbar-end\">\n                            <div className=\"navbar-item\">\n                                <div className=\"buttons\">\n                                    <div> {props.showForm}</div>\n                                    <PrimaryButton text={'Sign up'} callBack={signUpHandle} />\n                                    <PrimaryButton text={'Sign in'} callBack={signInHandle} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n            </>\n        );\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showSignIn: (state) => dispatch(showSignInForm(state)),\n        showSignUp: (state) => dispatch(showSignUpForm(state)),\n        userLoggedIn: (state) => dispatch(userSignedIn(state))\n    }\n}\nexport default connect(undefined, mapDispatchToProps)(Header)","/Users/anjalidiwakar/Documents/react-startup-app/src/components/admin/Admin.jsx",["233","234"],"import React, { useState } from 'react';\nimport SignIn from '../signIn/SignIn';\nimport '../Common.css';\nimport './Admin.css';\nimport { useSelector } from 'react-redux';\nimport PollForm from '../polls/add-Poll/AddPollContainer'\nimport AdminPolls from '../polls/adminView_Poll/AdminViewPolls'\nimport ClosedPolls from '../polls/closed-Polls/ClosedPolls';\nimport { Modal, Menu } from 'antd';\nimport \"antd/dist/antd.css\";\nimport '../Common.css';\n\nconst { SubMenu } = Menu;\n\nfunction Admin(props) {\n  const [adminRequest, setAdminRequest] = useState(\"Sign In\");\n  const [createPoll, setCreatePoll] = useState(false);\n  //const userLoggedOut = useSelector((state) => state.signOut.state_User_Logged_In);\n  const [compToRender, setCompRenderer] = useState();\n  const isLoggedIn = useSelector((state) => state.checkLogin.state_User_Logged_In);\n  const role = sessionStorage.getItem(\"role\");\n\n  function HandleCancel() {\n    setCreatePoll(false);\n  };\n\n  function handleClick(clickHandler) {\n    switch (clickHandler.key) {\n      case \"1\":\n        setCreatePoll(true);\n        setCompRenderer(null);\n        break;\n      case \"2\":\n        setCompRenderer(<AdminPolls />);\n        break;\n      case \"3\":\n        setCompRenderer(<ClosedPolls />);\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (isLoggedIn !==true || role !==\"Admin\") {\n    return (\n      <>\n        <SignIn />\n      </>\n    )\n  }\n  else {\n    console.log(role !==\"Admin\")\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"left\">\n            <Menu\n              onClick={handleClick}\n              style={{ width: 256 }}\n              defaultSelectedKeys={['1']}\n              defaultOpenKeys={['pollMenu']}\n              mode=\"inline\">\n              <SubMenu key=\"pollMenu\" title=\"Polls\">\n                <Menu.Item key=\"1\">Create poll</Menu.Item>\n                <SubMenu title=\"Check Status\">\n                  <Menu.Item key=\"2\">Active Polls</Menu.Item>\n                  <Menu.Item key=\"3\">Closed Polls</Menu.Item>\n                </SubMenu>\n              </SubMenu>\n              <SubMenu key=\"employeeMenu\" title=\"Employee\">\n                <Menu.Item key=\"5\">Create Profile</Menu.Item>\n                <Menu.Item key=\"6\">Manage Profile</Menu.Item>\n              </SubMenu>\n            </Menu>\n          </div>\n          <Modal className=\"padding\"\n            visible={createPoll}\n            title=\"Create a Poll\"\n            onOk={HandleCancel}\n            onCancel={HandleCancel}\n            footer={[\n            ]}\n          >\n            {createPoll === true && <PollForm close={setCreatePoll} />}\n          </Modal>\n          {isLoggedIn !== false && createPoll === false && <div className=\"right\">{compToRender}</div>}\n\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;","/Users/anjalidiwakar/Documents/react-startup-app/src/components/SignUp/Signup.jsx",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/signIn/SignIn.jsx",["235","236","237","238"],"\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from 'react-redux';\nimport Button from \"react-bootstrap/Button\";\nimport SignUp from '../SignUp/Signup';\nimport \"./SignIn.css\";\nimport { useHistory } from 'react-router-dom'\nimport { userSignedIn } from '../../redux/signOut/userLoggedAction';\nimport SuccessNotification from '../feedback/SuccessNotofication';\nimport { CreatePollAction } from '../../redux/polls/AddPollAction';\nimport { AddPollOptions } from '../../redux/pollOption/AddPollOptionAction';\n\nfunction SignIn(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [renderState, setRenderState] = useState(\"\");\n    const history = useHistory();\n    \n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n    function handleSubmit() {\n        let users = localStorage.getItem(\"users\");\n        if (users) {\n            users = JSON.parse(users);\n        }\n        let user = users.find(t => t.email === email);\n        if (user) {\n            if (user.password === password) {\n                props.signInUser(true);\n                sessionStorage.setItem(\"email\", email);\n                sessionStorage.setItem(\"password\", password);\n                if (email === \"anjali.diwakar@talentica.com\")\n                    sessionStorage.setItem(\"role\", 'admin');\n                else\n                    sessionStorage.setItem(\"role\", user.role);\n                history.push('/' + sessionStorage.getItem(\"role\"));\n                SuccessNotification(\"Signed in successfullyy !!\", '');\n            }\n            else {\n                SuccessNotification(\"Password is incorrect, please try again.\", '');\n            }\n        }\n        else\n        SuccessNotification(\"No user found with this email, plrease try with another one\", '');\n\n    }\n    const handleSignUp = () => { setRenderState(\"SignUp\") }\n\n    if (renderState === \"\") {\n        return (\n            <div className=\"login-wrapper\">\n                <p>Please Sign In</p>\n                <div className=\"field\">\n                    <label className=\"label is-normal\">Email</label>\n                    <div className=\"control\">\n                        <input className=\"input is-normal\" type=\"email\" value={email}\n                            onChange={(e) => setEmail(e.target.value)} placeholder=\"Enter email\" />\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <label className=\"label is-normal\">Password</label>\n                    <div className=\"control\">\n                        <input className=\"input is-normal\" type=\"password\" value={password}\n                            onChange={(e) => setPassword(e.target.value)} placeholder=\"Enter password\" />\n                    </div>\n                </div>\n\n                <Button className=\"button is-info\" onClick={handleSubmit} type=\"submit\" disabled={!validateForm()}>\n                    Sign in\n            </Button>\n                <p> Do not have an account? Please Sign Up here</p>\n                <Button className=\"button is-info\" onClick={handleSignUp}>Sign Up</Button>\n\n            </div>\n        );\n    }\n    else if (renderState === \"SignUp\") {\n        return (\n            <div>\n                <SignUp />\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signInUser: (state) => dispatch(userSignedIn(state))\n    }\n}\nexport default connect(undefined, mapDispatchToProps)(SignIn)","/Users/anjalidiwakar/Documents/react-startup-app/src/components/signIn/SignInHere.jsx",[],["239","240"],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/models/User.jsx",["241"],"export default class Users {\n    firstName;\n    lastName;\n    email;\n    confirmedEmail;\n    password;\n    confirmedPassword;\n    role;\n    constructor() { }\n    setFirstName(firstName) {\n        this.firstName = firstName;\n    }\n    setLastName(lastName) {\n        this.lastName = lastName;\n    }\n    setEmail(email) {\n        this.email = email;\n    }\n    setConfirmedEmail(confirmedEmail) {\n        this.confirmedEmail = confirmedEmail;\n    }\n    setPassword(password) {\n        this.password = password;\n    }\n    setConfirmedPassword(confirmedPassword) {\n        this.assertString(this.password, confirmedPassword);\n        this.confirmedPassword = confirmedPassword;\n    }\n    setRole() {\n        this.role = \"User\";\n    }\n    assertString(input1, input2) {\n        return input1===input2;\n    }\n}","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/store.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signIn/signInReducer.js",["242"],"import { SHOW_SIGNIN_FORM } from '../actionTypes';\nconst initialState = {\n    state_SignInForm: false\n}\n\nconst signInReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_SIGNIN_FORM: return {\n            ...state,\n            state_SignInForm: action.state\n        }\n            break\n        default: return state;\n    }\n}\n\nexport default signInReducer;","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signIn/signInAction.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/actionTypes.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signUp/signUpAction.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/rootReducer.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signUp/signUpReducer.js",["243"],"import { SHOW_SIGNUP_FORM } from '../actionTypes'\n\nconst initialState = {\n    state_SignUpForm: false\n}\n\nconst signUpReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_SIGNUP_FORM: return {\n            ...state,\n            state_SignUpForm: action.state\n        }\n            break\n        default: return state\n    }\n}\n\nexport default signUpReducer","/Users/anjalidiwakar/Documents/react-startup-app/src/components/models/Poll.js",["244"],"export default class PollList {\n\n    pollTitle;\n    pollId;\n    userWhoAnswered = [];\n    pollStatus;\n    questionList = [];\n    constructor() { }\n\n    setQuestionList(list) {\n        this.questionList = list;\n    }\n    setpollTitle(title) {\n        this.pollTitle = title;\n    }\n    \n    // setAnswer1(answer1) {\n    //     this.answer1.value = answer1\n    //     this.answer1.count = 0\n    //     this.options.push(this.answer1)\n    // }\n    // setAnswer2(answer2) {\n    //     this.answer2.value = answer2\n    //     this.answer2.count = 0\n    //     this.options.push(this.answer2)\n    // }\n    // setAnswer3(answer3) {\n    //     this.answer3.value = answer3\n    //     this.answer3.count = 0\n    //     this.options.push(this.answer3)\n    // }\n    \n    setPollId(pollId) {\n        this.pollId = pollId\n    }\n    setPollStatus(status) {\n        this.pollStatus = status\n    }\n    setTotalVotes\n\n}\n\nexport class Answers {\n    value = \"\";\n    count = 0;\n    optionId;\n    isSelected = false;\n}\n","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/active-Poll/activePolls.jsx",["245","246","247","248","249","250"],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/buttons/primaryButton.jsx",["251"],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/buttons/PrimaryButton.jsx",["252"],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/pollOption/AddPollOptionReducer.js",["253"],"import { POLL_OPTIONS } from '../actionTypes';\n\nfunction getOptionsFromLocalStorage() {\n    let optionList = localStorage.getItem(\"optionList\");\n    optionList !== null ? optionList = JSON.parse(optionList) : optionList = [];\n    return optionList;\n}\nlet optionList =  getOptionsFromLocalStorage();\nconst initialState = {\n    state_optionList: optionList\n}\n\nconst AddPollOptionReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case POLL_OPTIONS: return {\n            ...state,\n            state_optionList: action.state\n        }\n            break\n        default: return state;\n    }\n}\n\nexport default AddPollOptionReducer;","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/pollOption/AddPollOptionAction.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/adminView_Poll/AdminViewPolls.jsx",["254"],"import React, { useEffect, useState } from 'react';\nimport '../../Common.css';\nimport \"antd/dist/antd.css\";\nimport PollStatus from '../PollStatus'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UpdatePollAction } from '../../../redux/polls/UpdatePollAction';\n\n\nfunction AdminPolls() {\n    const dispatch = useDispatch();\n    const pollData = useSelector((state) => state.createPoll.state_pollData);\n    const [reduxPolls, setReduxPolls] = useState(pollData);\n    let storePolls = reduxPolls;\n    let activePols = pollData.filter(poll => poll.pollInfo.pollStatus === \"Active\");\n    const [polls, setPollData] = useState(activePols);\n    const [updatePollsToRedux, setReduxFlag] = useState(false);\n    let closedPoll = pollData;\n    const closePoll = (pollIndex, pollId) => {\n        closedPoll[pollIndex].pollInfo.pollStatus = 'Closed';\n        storePolls[pollId - 1].pollInfo.pollStatus = 'Closed';\n        setReduxPolls(storePolls);\n        activePols = closedPoll.filter(poll => poll.pollInfo.pollStatus === \"Active\");\n        setPollData(activePols);\n        setReduxFlag(!updatePollsToRedux);\n    }\n    useEffect(() => { dispatch(UpdatePollAction(reduxPolls)) }, [updatePollsToRedux]);\n    if (polls.length > 0)\n        return (\n            <PollStatus pollData={polls} closePollCallBack={closePoll} isActivePoll={true} isUserActivePollRequest={false} />\n        )\n    else\n        return (\n            <div>\n                No active polls at this moment\n            </div>\n        )\n}\n\nexport default AdminPolls","/Users/anjalidiwakar/Documents/react-startup-app/src/components/buttons/LightButton.jsx",["255"],"export default function LightButton(buttonProp) {\n    return (\n        <a className=\"button is-light\" onClick={buttonProp.callBack}>\n            {buttonProp.text}\n        </a>\n    );\n}",["256","257"],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/closed-Polls/ClosedPolls.jsx",["258"],"import '../Modal.css';\nimport '../../Common.css';\nimport PollStatus from \"../PollStatus\";\nimport { useSelector } from 'react-redux';\n\nfunction ClosedPolls() {\n\n    const filterPolls = (applicablePolls) => {\n        for (let i = 0; i < applicablePolls.length; i++) {\n            let submittedPoll = applicablePolls[i].pollInfo.userList.find(p => p === sessionStorage.getItem(\"email\"));\n            if (submittedPoll === undefined) {\n                applicablePolls = applicablePolls.filter(p => p.pollInfo.pollTitle !== applicablePolls[i].pollInfo.pollTitle);\n            }\n        }\n        return applicablePolls;\n    }\n    const polls = useSelector((state) => state.createPoll.state_pollData);\n    let markedClosed = polls.filter(poll => poll.pollInfo.pollStatus === 'Closed');\n    let applicablePolls = markedClosed;\n    if (sessionStorage.getItem(\"role\") === 'User')\n        markedClosed = filterPolls(applicablePolls);\n\n    if (applicablePolls.length > 0) {\n        return (\n            <>\n                <PollStatus pollData={markedClosed} isActivePoll={false} isUserActivePollRequest={false} />\n            </>\n        );\n    }\n    else {\n        return (\n            <>\n                <div> No Closed polls at this moment. </div>\n\n            </>\n        )\n    }\n}\n\nexport default ClosedPolls","/Users/anjalidiwakar/Documents/react-startup-app/src/components/header/HeaderRightPanel.jsx",["259","260","261"],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/header/GuestUser.jsx",["262","263","264","265","266"],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/header/LoggedInUser.jsx",["267","268","269"],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/feedback/SuccessNotofication.jsx",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/add-Poll/PollForm.jsx",["270","271"],"import PrimaryButton from '../../buttons/PrimaryButton';\nimport { Divider } from 'antd';\nfunction CreatePollForm(props) {\n    return (\n        <>\n            <div className=\"conatiner is-poll\">\n                <div className=\"box is-brand-box\">\n                    <form>\n                        {\n                            <>\n                                <div className=\"field\">\n                                    <label className=\"polltitle is-size-3-tablet is-size-4-mobile has-texted-centered\"> Poll Title </label>\n                                    <input className=\"input is-primary\" value={props.pollObj.pollInfo.polltitle} \n                                        onChange={(v) => props.setPollTitle(v.target.value)} placeholder=\"Provide poll title here\" required />\n                                </div>\n                                <Divider />\n                                {\n                                    props.pollObj.questionInfo.map((value, questionIndex) => {\n                                        return (\n                                            <div key={questionIndex}>\n                                                <div className=\"field\">\n                                                    <label className=\"label\">{questionIndex + 1}.&nbsp; Question </label>\n                                                    <input className=\"input is-primary\" value={value.que.queTitle} \n                                                        onChange={(v) => props.setPollQuestionTitle(questionIndex, v.target.value)} placeholder=\"Provide question here\" required />\n                                                </div>\n                                                <div className=\"field\">\n                                                    <label className=\"label\"> Options&nbsp;&nbsp; </label>\n\n                                                    {value.optionInfo.map((option, optionIndex) => {\n                                                        return (\n                                                            <div key={optionIndex}>\n                                                                {\n\n                                                                    <div className=\"field\">\n                                                                        <input className=\"input is-primary\" value={option.value}\n                                                                            onChange={(v) => props.setPollOptionValue(optionIndex,\n                                                                            questionIndex, v.target.value)}\n                                                                            placeholder=\"Provide option\" required />\n                                                                        <hr />\n                                                                    </div>\n\n                                                                }\n                                                            </div>\n                                                        );\n                                                    })}\n                                                </div>\n                                                <a onClick={() => props.addOptionHandler(questionIndex)}> Add Option </a>\n                                                <Divider />\n                                            </div>\n                                        )\n\n                                    })\n                                }\n                            </>\n                        }\n\n                        <a onClick={props.addQuestionHandler}> Add another question </a>\n                        <div><PrimaryButton text={'Submit'} callBack={props.submit} /> </div>\n\n                    </form>\n                </div>\n            </div>\n\n        </>\n    );\n}\n\nexport default CreatePollForm","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/add-Poll/AddPollContainer.jsx",["272","273","274","275","276"],"import Poll from \"../../models/Poll\";\nimport { useEffect, useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport CreatePollForm from './PollForm'\nimport SuccessNotification from '../../feedback/SuccessNotofication'\nimport { PollDetails } from '../../models/PollQuestionsList'\nimport { AddPollOptions } from \"../../../redux/pollOption/AddPollOptionAction\";\nimport { AddPollAction } from \"../../../redux/polls/AddPollAction\";\n\n\nfunction PollForm(props) {\n    let pollOption1Obj = {\n        value: \"\",\n        count: 0,\n        id: 0,\n        isOptionSelected: false\n    };\n    let pollOption2Obj = {\n        value: \"\",\n        count: 0,\n        id: 1,\n        isOptionSelected: false\n    };\n    let pollQueObj = {\n        queTitle: \"\",\n        questionId: 1,\n        totalSubmissions: 0\n    };\n    let pollObj = {\n        pollTitle: \"\",\n        pollStatus: \"Active\",\n        userList: [],\n        pollId: 1,\n        isSubmitted: false\n    }\n    let quesInfo = {\n        que: pollQueObj,\n        optionInfo: [pollOption1Obj, pollOption2Obj]\n    };\n    for (let i = 0; i < quesInfo.optionInfo.length; i++) {\n        quesInfo.optionInfo[i].id = i + 1;\n    }\n    let poll = {\n        pollInfo: pollObj,\n        questionInfo: [quesInfo]\n    }\n    const [pollState, setPollState] = useState(poll);\n    const [addPollDataToRedux, setReduxFlag] = useState(false);\n    let pollList = localStorage.getItem(\"polls\");\n    let pollToLocalStorage = pollState;\n    const storePolls = useSelector((state) => state.createPoll.state_pollData);\n    const dispatch = useDispatch();\n\n\n    function SubmitPollForm() {\n        pollList !== null ? pollList = JSON.parse(pollList) : pollList = [];\n        pollToLocalStorage.pollInfo = pollState.pollInfo;\n        pollToLocalStorage.pollInfo.pollId = storePolls.length + 1;\n        pollToLocalStorage.quesInfo = pollState.questionInfo;\n        pollToLocalStorage.pollInfo.isSubmitted = true;\n        pollList.push(pollToLocalStorage);\n        props.close(false);\n        SuccessNotification('Poll created!', '');\n        setReduxFlag(!addPollDataToRedux);\n    }\n    useEffect(() => { dispatch(AddPollAction(pollToLocalStorage)) }, [addPollDataToRedux]);\n    const addOptionHanlder = (queIndex) => {\n        let pollData = Object.create(pollState);\n        pollData.questionInfo[queIndex].optionInfo.push(pollOption1Obj);\n        setPollState(pollData);\n    };\n\n\n    const handleAddQuestion = () => {\n        let pollData = Object.create(pollState);\n        pollData.questionInfo.push(quesInfo);\n        setPollState(pollData);\n    }\n\n    const setPollTitle = (pollTitle) => {\n        let pollData = Object.create(pollState);\n        pollData.pollInfo.pollTitle = pollTitle;\n        setPollState(pollData);\n    }\n\n    const setPollQuestionTitle = (queIndex, queTitle) => {\n        let pollData = Object.create(pollState);\n        pollData.questionInfo[queIndex].que.queTitle = queTitle;\n        setPollState(pollData);\n    }\n\n    const setPollOptionValue = (optionIndex, queIndex, optionValue) => {\n        let pollData = Object.create(pollState);\n        pollData.questionInfo[queIndex].optionInfo[optionIndex].value = optionValue;\n        setPollState(pollData);\n    }\n\n\n\n\n\n    return (\n        <>\n            <CreatePollForm pollObj={pollState} setPollTitle={setPollTitle} setPollOptionValue={setPollOptionValue}\n                setPollQuestionTitle={setPollQuestionTitle}\n                addOptionHandler={addOptionHanlder} addQuestionHandler={handleAddQuestion}\n                submit={SubmitPollForm} />\n        </>\n    )\n}\n\n\nexport default PollForm","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/active-Poll/ActivePolls.jsx",["277","278","279","280","281"],"import SuccessNotification from '../../feedback/SuccessNotofication';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport \"antd/dist/antd.css\";\nimport { useEffect, useState } from \"react\";\nimport PollStatus from '../PollStatus';\nimport { UpdatePollAction } from '../../../redux/polls/UpdatePollAction';\nimport { Component } from 'react';\n\n\nclass ActivePolls extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            polls: this.props.polls.state_pollData,\n            reduxPolls: this.props.polls.state_pollData,\n            updatePollsToRedux: false,\n            userPolls: []\n        };\n        this.storePolls = this.state.reduxPolls;\n        let activePolls = this.state.polls.filter(poll => poll.pollInfo.pollStatus === 'Active');\n        this.applicablePolls = activePolls;\n        this.filterAnsweredPolls = this.filterAnsweredPolls.bind(this)\n        this.applicablePolls = this.filterAnsweredPolls(activePolls);\n    }\n\n    componentDidMount() {\n        this.setState({ userPolls: this.applicablePolls });\n    }\n\n    filterAnsweredPolls(activePolls) {\n        for (let i = 0; i < activePolls.length; i++) {\n            let submittedPoll = activePolls[i].pollInfo.userList.find(u => u === sessionStorage.getItem(\"email\")) //activePolls[i].userWhoAnswered.find(p => p === sessionStorage.getItem(\"email\"));\n            if (submittedPoll !== undefined) {\n                this.applicablePolls = this.applicablePolls.filter(p => p.pollInfo.pollTitle !== activePolls[i].pollInfo.pollTitle);\n            }\n        }\n        return this.applicablePolls;\n    }\n\n    updateUserChoice = (selectedOptions, pollIndex, pollId) => {\n        for (const [key, value] of Object.entries(selectedOptions)) {\n            let i = 0;\n            for (i; i < this.applicablePolls[pollIndex].quesInfo[key].optionInfo.length; i++) {\n                if (this.applicablePolls[pollIndex].quesInfo[key].optionInfo[i].value === value) {\n                    this.applicablePolls[pollIndex].quesInfo[key].optionInfo[i].count++;\n                    break;\n                }\n            }\n            this.applicablePolls[pollIndex].quesInfo[key].que.totalSubmissions++;\n        }\n        this.applicablePolls[pollIndex].pollInfo.userList.push(sessionStorage.getItem(\"email\"));\n        this.storePolls[pollId - 1].pollInfo.userList.push(sessionStorage.getItem(\"email\"));\n        this.setState({ reduxPolls: this.storePolls });\n        this.setState({ userPolls: this.filterAnsweredPolls(this.applicablePolls) });\n        this.setState({ updatePollsToRedux: !this.state.updatePollsToRedux });\n        this.props.update(this.state.reduxPolls);\n    }\n\n    render() {\n        if (this.applicablePolls.length > 0) {\n            return (\n                <>\n                    <PollStatus pollData={this.state.userPolls} isUserActivePollRequest={true} isActivePoll={false} submitChoice={this.updateUserChoice} />\n                </>\n            );\n        }\n        else {\n            return (\n                <>\n                    <div> No Active polls at this moment. </div>\n                </>\n            )\n        }\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        polls: state.createPoll,\n\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        update: (props) => dispatch(UpdatePollAction(props))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivePolls) \n","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/PollOptions.jsx",["282","283"],"import React from 'react'\n\nfunction PollOptions(props) {\n    return (\n        <>\n            {\n                props.pollQueData.map((q, index) =>\n                    <div key={index}>\n                        <h2 >{index + 1}.&nbsp;{q.que.queTitle}</h2>\n                        {\n                            q.optionInfo.map(op => {\n                                return (\n                                    <>\n                                        <li><span >{op.value}</span>&nbsp;&nbsp;&nbsp;\n                                        <a>{op.count != 0 ? ((op.count / q.que.totalSubmissions) * 100).toFixed(2) : 0.00}%</a></li>\n                                    </>\n                                )\n                            })\n                        }\n\n                        <br />\n                    </div>\n                )\n            }\n        </>\n    )\n}\n\nexport default PollOptions;","/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/PollStatus.jsx",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/components/polls/PollInputUser.jsx",["284","285","286"],"import { Radio, Input } from 'antd';\nimport { useState } from 'react';\nimport PrimaryButton from '../buttons/PrimaryButton';\nimport { useSelector } from 'react-redux';\nimport { Component } from 'react';\n\nconst radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n};\n\nclass UserPollInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOption: {},\n        };\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    }\n\n    inputChangeHandler(optionValue, queId) {\n        this.setState({ selectedOption: { ...this.state.selectedOption, [queId]: optionValue } })\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.props.pollQueData.map((q, queIndex) =>\n                        <div key={queIndex}>\n                            <h2>{q.que.queTitle}</h2>\n                            {\n                                <Radio.Group onChange={(e) => this.inputChangeHandler(e.target.value, queIndex)}\n                                    name={queIndex} value={this.state.selectedOption[queIndex]}>\n                                    {\n                                        q.optionInfo.map((option, opIndex) => {\n                                            return (\n                                                <Radio key={opIndex} style={radioStyle} value={option.value}>\n                                                    {option.value}\n                                                </Radio>\n                                            )\n                                        })\n                                    }\n                                </Radio.Group>\n\n                            }\n                            <br />\n                        </div>\n                    )\n                }\n                <br />\n                {<PrimaryButton text={\"Submit\"}\n                    callBack={() => this.props.submitChoiceCallBack(this.state.selectedOption, this.props.pollIndex, this.props.pollId)} />}\n            </>\n\n        )\n    }\n}\n\nexport default UserPollInput;","/Users/anjalidiwakar/Documents/react-startup-app/src/components/models/PollQuestionsList.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/polls/AddPollAction.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/polls/UpdatePollAction.js",[],"/Users/anjalidiwakar/Documents/react-startup-app/src/redux/polls/AddUpdatePollsReducer.js",["287","288","289"],"import { ADD_POLL, UPDATE_POLL } from '../actionTypes';\n\nfunction getPollFromLocalStorage() {\n    let pollList = localStorage.getItem(\"polls\");\n    pollList !== null ? pollList = JSON.parse(pollList) : pollList = [];\n    return pollList;\n}\n\nfunction addPollToLocalstorage(polls) {\n    if(polls.pollInfo.isSubmitted)\n    {\n        let list = getPollFromLocalStorage();\n        list.push(polls);\n        localStorage.setItem(\"polls\", JSON.stringify(list), false);\n    }\n}\n\nfunction updatePollToLocalStorage(polls) {\n    localStorage.setItem(\"polls\", JSON.stringify(polls), false);\n}\nlet pollList = getPollFromLocalStorage();\n\nconst initialState = {\n    state_pollData: pollList\n}\n\nconst PollReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POLL:\n            addPollToLocalstorage(action.props);\n            if (action.props.pollInfo.isSubmitted)\n                return {\n                    ...state,\n                    state_pollData: [...state.state_pollData, action.props]\n                }\n            else\n                return state;\n            break;\n        case UPDATE_POLL:\n            {\n                updatePollToLocalStorage(action.props);\n                return {\n                    ...state,\n                    state_pollData: action.props\n                }\n            }\n            break;\n        default: return state;\n    }\n}\n\nexport default PollReducer","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signOut/userLoggedInReducer.js",["290"],"import { USER_LOGGED_IN } from '../actionTypes';\n\nlet userSignedIn = false;\nif (sessionStorage.getItem(\"email\") !== null) {\n  userSignedIn = true;\n}\nconst initialState = {\n    state_User_Logged_In : userSignedIn\n}\nexport const userLoggedInReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case USER_LOGGED_IN :\n            return {\n                ...state,\n                state_User_Logged_In: action.props\n            }\n            break\n        default: return state\n    }\n}","/Users/anjalidiwakar/Documents/react-startup-app/src/redux/signOut/userLoggedAction.js",[],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":5,"column":9,"nodeType":"297","messageId":"298","endLine":5,"endColumn":13},{"ruleId":"295","severity":1,"message":"299","line":6,"column":8,"nodeType":"297","messageId":"298","endLine":6,"endColumn":13},{"ruleId":"295","severity":1,"message":"300","line":10,"column":9,"nodeType":"297","messageId":"298","endLine":10,"endColumn":19},{"ruleId":"295","severity":1,"message":"301","line":11,"column":7,"nodeType":"297","messageId":"298","endLine":11,"endColumn":11},{"ruleId":"295","severity":1,"message":"302","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":16},{"ruleId":"303","severity":1,"message":"304","line":18,"column":5,"nodeType":"305","messageId":"306","endLine":33,"endColumn":6},{"ruleId":"295","severity":1,"message":"307","line":1,"column":17,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"307","line":1,"column":17,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"308","line":2,"column":19,"nodeType":"297","messageId":"298","endLine":2,"endColumn":30},{"ruleId":"295","severity":1,"message":"309","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":21},{"ruleId":"295","severity":1,"message":"310","line":7,"column":10,"nodeType":"297","messageId":"298","endLine":7,"endColumn":14},{"ruleId":"311","severity":1,"message":"312","line":35,"column":21,"nodeType":"313","endLine":35,"endColumn":137},{"ruleId":"311","severity":1,"message":"312","line":44,"column":25,"nodeType":"313","endLine":44,"endColumn":52},{"ruleId":"311","severity":1,"message":"312","line":48,"column":29,"nodeType":"313","endLine":48,"endColumn":56},{"ruleId":"311","severity":1,"message":"312","line":52,"column":33,"nodeType":"313","endLine":52,"endColumn":60},{"ruleId":"311","severity":1,"message":"312","line":55,"column":33,"nodeType":"313","endLine":55,"endColumn":60},{"ruleId":"311","severity":1,"message":"312","line":59,"column":33,"nodeType":"313","endLine":59,"endColumn":60},{"ruleId":"311","severity":1,"message":"312","line":69,"column":33,"nodeType":"313","endLine":69,"endColumn":60},{"ruleId":"311","severity":1,"message":"312","line":73,"column":37,"nodeType":"313","endLine":73,"endColumn":86},{"ruleId":"311","severity":1,"message":"312","line":90,"column":25,"nodeType":"313","endLine":90,"endColumn":141},{"ruleId":"311","severity":1,"message":"312","line":99,"column":29,"nodeType":"313","endLine":99,"endColumn":56},{"ruleId":"311","severity":1,"message":"312","line":103,"column":33,"nodeType":"313","endLine":103,"endColumn":60},{"ruleId":"311","severity":1,"message":"312","line":107,"column":37,"nodeType":"313","endLine":107,"endColumn":64},{"ruleId":"311","severity":1,"message":"312","line":110,"column":37,"nodeType":"313","endLine":110,"endColumn":64},{"ruleId":"311","severity":1,"message":"312","line":114,"column":37,"nodeType":"313","endLine":114,"endColumn":64},{"ruleId":"295","severity":1,"message":"314","line":16,"column":10,"nodeType":"297","messageId":"298","endLine":16,"endColumn":22},{"ruleId":"295","severity":1,"message":"315","line":16,"column":24,"nodeType":"297","messageId":"298","endLine":16,"endColumn":39},{"ruleId":"295","severity":1,"message":"316","line":2,"column":17,"nodeType":"297","messageId":"298","endLine":2,"endColumn":26},{"ruleId":"295","severity":1,"message":"317","line":3,"column":19,"nodeType":"297","messageId":"298","endLine":3,"endColumn":30},{"ruleId":"295","severity":1,"message":"318","line":10,"column":10,"nodeType":"297","messageId":"298","endLine":10,"endColumn":26},{"ruleId":"295","severity":1,"message":"319","line":11,"column":10,"nodeType":"297","messageId":"298","endLine":11,"endColumn":24},{"ruleId":"291","replacedBy":"320"},{"ruleId":"293","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":9,"column":5,"nodeType":"324","messageId":"325","endLine":9,"endColumn":22},{"ruleId":"326","severity":1,"message":"327","line":12,"column":13,"nodeType":"328","messageId":"329","endLine":12,"endColumn":18},{"ruleId":"326","severity":1,"message":"327","line":13,"column":9,"nodeType":"328","messageId":"329","endLine":13,"endColumn":14},{"ruleId":"322","severity":1,"message":"323","line":8,"column":5,"nodeType":"324","messageId":"325","endLine":8,"endColumn":22},{"ruleId":"295","severity":1,"message":"309","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":21},{"ruleId":"295","severity":1,"message":"330","line":3,"column":10,"nodeType":"297","messageId":"298","endLine":3,"endColumn":15},{"ruleId":"295","severity":1,"message":"331","line":3,"column":17,"nodeType":"297","messageId":"298","endLine":3,"endColumn":22},{"ruleId":"295","severity":1,"message":"332","line":8,"column":7,"nodeType":"297","messageId":"298","endLine":8,"endColumn":17},{"ruleId":"295","severity":1,"message":"333","line":22,"column":14,"nodeType":"297","messageId":"298","endLine":22,"endColumn":30},{"ruleId":"295","severity":1,"message":"334","line":30,"column":11,"nodeType":"297","messageId":"298","endLine":30,"endColumn":24},{"ruleId":"311","severity":1,"message":"312","line":3,"column":9,"nodeType":"313","endLine":3,"endColumn":72},{"ruleId":"311","severity":1,"message":"312","line":4,"column":9,"nodeType":"313","endLine":4,"endColumn":98},{"ruleId":"326","severity":1,"message":"327","line":19,"column":13,"nodeType":"328","messageId":"329","endLine":19,"endColumn":18},{"ruleId":"335","severity":1,"message":"336","line":26,"column":65,"nodeType":"337","endLine":26,"endColumn":85,"suggestions":"338"},{"ruleId":"311","severity":1,"message":"312","line":3,"column":9,"nodeType":"313","endLine":3,"endColumn":70},{"ruleId":"291","replacedBy":"339"},{"ruleId":"293","replacedBy":"340"},{"ruleId":"341","severity":1,"message":"342","line":12,"column":58,"nodeType":"343","messageId":"344","endLine":12,"endColumn":125},{"ruleId":"345","severity":2,"message":"346","line":6,"column":25,"nodeType":"297","messageId":"347","endLine":6,"endColumn":36},{"ruleId":"295","severity":1,"message":"348","line":7,"column":14,"nodeType":"297","messageId":"298","endLine":7,"endColumn":25},{"ruleId":"349","severity":1,"message":"350","line":18,"column":9,"nodeType":"351","messageId":"352","endLine":19,"endColumn":19},{"ruleId":"345","severity":2,"message":"353","line":6,"column":28,"nodeType":"297","messageId":"347","endLine":6,"endColumn":33},{"ruleId":"354","severity":2,"message":"355","line":7,"column":22,"nodeType":"356","endLine":7,"endColumn":35},{"ruleId":"345","severity":2,"message":"357","line":7,"column":63,"nodeType":"297","messageId":"347","endLine":7,"endColumn":75},{"ruleId":"354","severity":2,"message":"355","line":8,"column":22,"nodeType":"356","endLine":8,"endColumn":35},{"ruleId":"345","severity":2,"message":"358","line":8,"column":63,"nodeType":"297","messageId":"347","endLine":8,"endColumn":75},{"ruleId":"311","severity":1,"message":"312","line":12,"column":17,"nodeType":"313","endLine":12,"endColumn":44},{"ruleId":"311","severity":1,"message":"312","line":16,"column":21,"nodeType":"313","endLine":16,"endColumn":70},{"ruleId":"345","severity":2,"message":"359","line":16,"column":33,"nodeType":"297","messageId":"347","endLine":16,"endColumn":44},{"ruleId":"311","severity":1,"message":"312","line":47,"column":49,"nodeType":"313","endLine":47,"endColumn":106},{"ruleId":"311","severity":1,"message":"312","line":57,"column":25,"nodeType":"313","endLine":57,"endColumn":63},{"ruleId":"295","severity":1,"message":"360","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":12},{"ruleId":"295","severity":1,"message":"361","line":3,"column":10,"nodeType":"297","messageId":"298","endLine":3,"endColumn":17},{"ruleId":"295","severity":1,"message":"362","line":6,"column":10,"nodeType":"297","messageId":"298","endLine":6,"endColumn":21},{"ruleId":"295","severity":1,"message":"319","line":7,"column":10,"nodeType":"297","messageId":"298","endLine":7,"endColumn":24},{"ruleId":"335","severity":1,"message":"363","line":66,"column":70,"nodeType":"337","endLine":66,"endColumn":90,"suggestions":"364"},{"ruleId":"295","severity":1,"message":"365","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":27},{"ruleId":"295","severity":1,"message":"317","line":2,"column":19,"nodeType":"297","messageId":"298","endLine":2,"endColumn":30},{"ruleId":"295","severity":1,"message":"308","line":2,"column":32,"nodeType":"297","messageId":"298","endLine":2,"endColumn":43},{"ruleId":"295","severity":1,"message":"316","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":19},{"ruleId":"295","severity":1,"message":"307","line":4,"column":21,"nodeType":"297","messageId":"298","endLine":4,"endColumn":29},{"ruleId":"311","severity":1,"message":"312","line":15,"column":41,"nodeType":"313","endLine":15,"endColumn":44},{"ruleId":"366","severity":1,"message":"367","line":15,"column":54,"nodeType":"368","messageId":"369","endLine":15,"endColumn":56},{"ruleId":"295","severity":1,"message":"331","line":1,"column":17,"nodeType":"297","messageId":"298","endLine":1,"endColumn":22},{"ruleId":"295","severity":1,"message":"307","line":2,"column":10,"nodeType":"297","messageId":"298","endLine":2,"endColumn":18},{"ruleId":"295","severity":1,"message":"308","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":21},{"ruleId":"326","severity":1,"message":"327","line":38,"column":13,"nodeType":"328","messageId":"329","endLine":38,"endColumn":19},{"ruleId":"303","severity":1,"message":"370","line":40,"column":13,"nodeType":"305","messageId":"371","endLine":46,"endColumn":14},{"ruleId":"326","severity":1,"message":"327","line":47,"column":13,"nodeType":"328","messageId":"329","endLine":47,"endColumn":19},{"ruleId":"326","severity":1,"message":"327","line":17,"column":13,"nodeType":"328","messageId":"329","endLine":17,"endColumn":18},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'Admin' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'role' is assigned a value but never used.","'ReactDOM' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","'useSelector' is defined but never used.","'PrimaryButton' is defined but never used.","'Tabs' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'adminRequest' is assigned a value but never used.","'setAdminRequest' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'CreatePollAction' is defined but never used.","'AddPollOptions' is defined but never used.",["372"],["373"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Radio' is defined but never used.","'Input' is defined but never used.","'radioStyle' is assigned a value but never used.","'updateUserChoice' is defined but never used.","'onClickOption' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'reduxPolls'. Either include them or remove the dependency array.","ArrayExpression",["374"],["372"],["373"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'applicablePolls'.","ArrowFunctionExpression","unsafeRefs","no-undef","'useSelector' is not defined.","undef","'signOutUser' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'props' is not defined.","react/jsx-no-undef","'PrimaryButton' is not defined.","JSXIdentifier","'signUpHandle' is not defined.","'signInHandle' is not defined.","'signOutUser' is not defined.","'Poll' is defined but never used.","'connect' is defined but never used.","'PollDetails' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'pollToLocalStorage'. Either include them or remove the dependency array.",["375"],"'SuccessNotification' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Block is redundant.","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},"Update the dependencies array to be: [dispatch, reduxPolls, updatePollsToRedux]",{"range":"380","text":"381"},"Update the dependencies array to be: [addPollDataToRedux, dispatch, pollToLocalStorage]",{"range":"382","text":"383"},[1185,1205],"[dispatch, reduxPolls, updatePollsToRedux]",[2196,2216],"[addPollDataToRedux, dispatch, pollToLocalStorage]"]